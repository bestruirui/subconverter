name: GitHub CI
on: 
  push:
    branches: [ master ]
  workflow_dispatch:

permissions:
  contents: write
  packages: write
  
jobs:
  linux_build:
    strategy:
      matrix:
        include:
          - arch: x86
            artifact: subconverter_linux32
            os: ubuntu-latest
          - arch: amd64
            artifact: subconverter_linux64
            os: ubuntu-latest
          - arch: armv7
            artifact: subconverter_armv7
            os: ubuntu-24.04-arm
          - arch: aarch64
            artifact: subconverter_aarch64
            os: ubuntu-24.04-arm
    runs-on: ${{ matrix.os }}
    name: Linux ${{ matrix.arch }} Build
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        ref: master
    - name: Get latest tag
      id: tag
      run: |
        LATEST_TAG=$(git describe --tags --abbrev=0) && echo "TAG_NAME=$LATEST_TAG" >> $GITHUB_OUTPUT
    - name: Add tag into version
      run: sed -i  -e 's|#define VERSION .*|#define VERSION "'"$(git describe --tags --abbrev=0)"'"|' src/version.h
    - name: Build
      run: docker run --rm -v $GITHUB_WORKSPACE:/root/workdir multiarch/alpine:${{ matrix.arch }}-latest-stable /bin/sh -c "apk add bash git nodejs npm && cd /root/workdir && chmod +x scripts/build.alpine.release.sh && bash scripts/build.alpine.release.sh"
    - name: zip
      run: zip ${{ matrix.artifact }} subconverter  base/base/all_base.tpl
    - name: Upload Release
      uses: softprops/action-gh-release@v2
      with:
        files: ${{ matrix.artifact }}.zip
        tag_name: ${{ steps.tag.outputs.TAG_NAME }}
        prerelease: false

  macos_build:
    strategy:
      matrix:
        include:
          - arch: x86
            artifact: subconverter_darwin64
            os: macos-13
          - arch: arm
            artifact: subconverter_darwinarm
            os: macos-14
    runs-on: ${{ matrix.os }}
    name: macOS ${{ matrix.arch }} Build
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        ref: master
    - name: Get latest tag
      id: tag
      run: |
        LATEST_TAG=$(git describe --tags --abbrev=0) && echo "TAG_NAME=$LATEST_TAG" >> $GITHUB_OUTPUT
    - name: Add tag into version
      run: sed -i  -e 's|#define VERSION .*|#define VERSION "'"$(git describe --tags --abbrev=0)"'"|' src/version.h
    - name: Build
      run: bash scripts/build.macos.release.sh
    - name: zip
      run: zip ${{ matrix.artifact }} subconverter  base/base/all_base.tpl
    - name: Upload Release
      uses: softprops/action-gh-release@v2
      with:
        files: ${{ matrix.artifact }}.zip
        tag_name: ${{ steps.tag.outputs.TAG_NAME }}
        prerelease: false
  
  windows_build:
    strategy:
      matrix:
        include:
          - arch: x86
            artifact: subconverter_win32
            env: i686
            msystem: MINGW32
          - arch: amd64
            artifact: subconverter_win64
            env: x86_64
            msystem: MINGW64
    runs-on: windows-latest
    name: Windows ${{ matrix.arch }} Build
    defaults:
      run:
        shell: msys2 {0}
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        ref: master
    - name: Setup MSYS2
      uses: msys2/setup-msys2@v2
      with:
        update: true
        install: base-devel git mingw-w64-${{ matrix.env }}-gcc mingw-w64-${{ matrix.env }}-cmake mingw-w64-${{ matrix.env }}-pcre2 patch zip
        msystem: ${{ matrix.msystem }}
        path-type: inherit
    - name: Get latest tag
      id: tag
      run: |
        LATEST_TAG=$(git describe --tags --abbrev=0) && echo "TAG_NAME=$LATEST_TAG" >> $GITHUB_OUTPUT
    - name: Add tag into version
      run: sed -i  -e 's|#define VERSION .*|#define VERSION "'"$(git describe --tags --abbrev=0)"'"|' src/version.h
    - name: Build
      run: bash scripts/build.windows.release.sh
    - name: zip
      run: zip ${{ matrix.artifact }} subconverter.exe base/base/all_base.tpl
    - name: Upload Release
      uses: softprops/action-gh-release@v2
      with:
        files: ${{ matrix.artifact }}.zip
        tag_name: ${{ steps.tag.outputs.TAG_NAME }}
        prerelease: false
